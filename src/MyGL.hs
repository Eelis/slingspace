{-# LANGUAGE UnicodeSyntax #-}
{-# OPTIONS -w #-}

module MyGL where

import Graphics.UI.GLUT

rotateRadians :: (Floating c, MatrixComponent c) ⇒ c → Vector3 c → IO ()
rotateRadians r = rotate (r / pi * 180)

red, green, blue, black, white :: Color4 GLclampf
red = Color4 1 0 0 1
green = Color4 0 1 0 1
blue = Color4 0 0 1 1
black = Color4 0 0 0 1
white = Color4 1 1 1 1

{-* Generated by DrIFT : Look, but Don't Touch. *-}
instance Read KeyState where
    readsPrec d input =
          (\ inp → [((Down) , rest) | ("Down" , rest) ← lex inp]) input
          ++
          (\ inp → [((Up) , rest) | ("Up" , rest) ← lex inp]) input

instance Read SpecialKey where
    readsPrec d input =
          (\ inp → [((KeyF1) , rest) | ("KeyF1" , rest) ← lex inp]) input
          ++
          (\ inp → [((KeyF2) , rest) | ("KeyF2" , rest) ← lex inp]) input
          ++
          (\ inp → [((KeyF3) , rest) | ("KeyF3" , rest) ← lex inp]) input
          ++
          (\ inp → [((KeyF4) , rest) | ("KeyF4" , rest) ← lex inp]) input
          ++
          (\ inp → [((KeyF5) , rest) | ("KeyF5" , rest) ← lex inp]) input
          ++
          (\ inp → [((KeyF6) , rest) | ("KeyF6" , rest) ← lex inp]) input
          ++
          (\ inp → [((KeyF7) , rest) | ("KeyF7" , rest) ← lex inp]) input
          ++
          (\ inp → [((KeyF8) , rest) | ("KeyF8" , rest) ← lex inp]) input
          ++
          (\ inp → [((KeyF9) , rest) | ("KeyF9" , rest) ← lex inp]) input
          ++
          (\ inp → [((KeyF10) , rest) | ("KeyF10" , rest) ← lex inp]) input
          ++
          (\ inp → [((KeyF11) , rest) | ("KeyF11" , rest) ← lex inp]) input
          ++
          (\ inp → [((KeyF12) , rest) | ("KeyF12" , rest) ← lex inp]) input
          ++
          (\ inp → [((KeyLeft) , rest) | ("KeyLeft" , rest) ← lex inp])
          input
          ++
          (\ inp → [((KeyUp) , rest) | ("KeyUp" , rest) ← lex inp]) input
          ++
          (\ inp → [((KeyRight) , rest) | ("KeyRight" , rest) ← lex inp])
          input
          ++
          (\ inp → [((KeyDown) , rest) | ("KeyDown" , rest) ← lex inp])
          input
          ++
          (\ inp → [((KeyPageUp) , rest) | ("KeyPageUp" , rest) ← lex inp])
          input
          ++
          (\ inp →
           [((KeyPageDown) , rest) | ("KeyPageDown" , rest) ← lex inp])
          input
          ++
          (\ inp → [((KeyHome) , rest) | ("KeyHome" , rest) ← lex inp])
          input
          ++
          (\ inp → [((KeyEnd) , rest) | ("KeyEnd" , rest) ← lex inp]) input
          ++
          (\ inp → [((KeyInsert) , rest) | ("KeyInsert" , rest) ← lex inp])
          input

instance Read MouseButton where
    readsPrec d input =
          (\ inp →
           [((LeftButton) , rest) | ("LeftButton" , rest) ← lex inp])
          input
          ++
          (\ inp →
           [((MiddleButton) , rest) | ("MiddleButton" , rest) ← lex inp])
          input
          ++
          (\ inp →
           [((RightButton) , rest) | ("RightButton" , rest) ← lex inp])
          input
          ++
          (\ inp → [((WheelUp) , rest) | ("WheelUp" , rest) ← lex inp])
          input
          ++
          (\ inp → [((WheelDown) , rest) | ("WheelDown" , rest) ← lex inp])
          input

instance Read Key where
    readsPrec d input =
          readParen (d > 9)
          (\ inp →
           [((Char aa) , rest) | ("Char" , inp) ← lex inp ,
        (aa , rest) ← readsPrec 10 inp])
          input
          ++
          readParen (d > 9)
          (\ inp →
           [((SpecialKey aa) , rest) | ("SpecialKey" , inp) ← lex inp ,
        (aa , rest) ← readsPrec 10 inp])
          input
          ++
          readParen (d > 9)
          (\ inp →
           [((MouseButton aa) , rest) | ("MouseButton" , inp) ← lex inp ,
        (aa , rest) ← readsPrec 10 inp])
          input

glDouble :: Double → GLdouble
glFloat :: Float → GLfloat
glDouble = realToFrac
glFloat = realToFrac
unGLdouble :: GLdouble → Double
unGLfloat :: GLfloat → Float
unGLdouble = realToFrac
unGLfloat = realToFrac
-- Todo: These are horrible.
